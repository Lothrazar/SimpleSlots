/* Sam Bassett https://github.com/PrinceOfAmber/CollectionTracker/blob/master/node_modules/server.js
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
function start(cwd)
{

	var http = require("http"), url = require("url"), path = require("path"), fs = require("fs"), /*database = require("database"),*/ port = process.argv[2] || 8888;

	http.createServer(function(request, response)
	{
	 
		//in future, we could first: check if it is a database call

		var uri = url.parse(request.url).pathname

		//request.method is GET,POST,etc.. if we need it

		var tokens = uri.split('/');

		//token[0] is ALWAYS always an empty string, since everything starts with / as the root
		
 
		//treat as a regular web request, getting file contents (html, css, js)

		//REF http://stackoverflow.com/a/13635318
		var filename = path.join(cwd, uri);
		fs.exists(filename, function(exists)
		{
			if (!exists)
			{
				response.writeHead(404,
				{
					"Content-Type" : "text/plain"
				});
				response.write("Node.js : 404 Not Found\n");
				response.end();
				return;
			}

			//redirect the ROOT to our index home page
			if (fs.statSync(filename).isDirectory()) {	filename += '/index.html'; }

			fs.readFile(filename, "binary", function(err, file)
			{
				if (err)
				{
					response.writeHead(500,
					{
						"Content-Type" : "text/plain"
					});
					response.write(err + "\n");
					response.end();
					return;
				}

				var headers = {};
;

				var contentTypesByExtension =
				{
					'.html' : "text/html",
					'.css' : "text/css",
					'.js' : "text/javascript"
				};

				var contentType = contentTypesByExtension[path.extname(filename)];
				
				if (contentType){	headers["Content-Type"] = contentType; }
				
				response.writeHead(200, headers);
				response.write(file, "binary");
				response.end();
			});
		});

		//}//end else

	}).listen(parseInt(port, 10));

	console.log("Hello Lothrazar.  Node.js started on port " + port + "\nCTRL + C to shutdown");

	
}

exports.start = start; 

